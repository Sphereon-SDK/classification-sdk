/* 
 * Classification API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Sphereon.SDK.Classification.Api;
using Sphereon.SDK.Classification.Model;
using Sphereon.SDK.Classification.Client;
using System.Reflection;

namespace Sphereon.SDK.Classification.Test
{
    /// <summary>
    ///  Class for testing ProjectClassificationPage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ProjectClassificationPageTests
    {
        // TODO uncomment below to declare an instance variable for ProjectClassificationPage
        //private ProjectClassificationPage instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ProjectClassificationPage
            //instance = new ProjectClassificationPage();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProjectClassificationPage
        /// </summary>
        [Test]
        public void ProjectClassificationPageInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ProjectClassificationPage
            //Assert.IsInstanceOfType<ProjectClassificationPage> (instance, "variable 'instance' is a ProjectClassificationPage");
        }

        /// <summary>
        /// Test the property 'ClassifiedClassName'
        /// </summary>
        [Test]
        public void ClassifiedClassNameTest()
        {
            // TODO unit test for the property 'ClassifiedClassName'
        }
        /// <summary>
        /// Test the property 'FeatureHighlightings'
        /// </summary>
        [Test]
        public void FeatureHighlightingsTest()
        {
            // TODO unit test for the property 'FeatureHighlightings'
        }
        /// <summary>
        /// Test the property 'PageNumber'
        /// </summary>
        [Test]
        public void PageNumberTest()
        {
            // TODO unit test for the property 'PageNumber'
        }
        /// <summary>
        /// Test the property 'TextLines'
        /// </summary>
        [Test]
        public void TextLinesTest()
        {
            // TODO unit test for the property 'TextLines'
        }
        /// <summary>
        /// Test the property 'SkipContentClassification'
        /// </summary>
        [Test]
        public void SkipContentClassificationTest()
        {
            // TODO unit test for the property 'SkipContentClassification'
        }
        /// <summary>
        /// Test the property 'ClassificationResults'
        /// </summary>
        [Test]
        public void ClassificationResultsTest()
        {
            // TODO unit test for the property 'ClassificationResults'
        }
        /// <summary>
        /// Test the property 'RotationType'
        /// </summary>
        [Test]
        public void RotationTypeTest()
        {
            // TODO unit test for the property 'RotationType'
        }
        /// <summary>
        /// Test the property 'ConfidentDocumentClassificationResult'
        /// </summary>
        [Test]
        public void ConfidentDocumentClassificationResultTest()
        {
            // TODO unit test for the property 'ConfidentDocumentClassificationResult'
        }
        /// <summary>
        /// Test the property 'AssignedClassName'
        /// </summary>
        [Test]
        public void AssignedClassNameTest()
        {
            // TODO unit test for the property 'AssignedClassName'
        }
        /// <summary>
        /// Test the property 'SeparationResults'
        /// </summary>
        [Test]
        public void SeparationResultsTest()
        {
            // TODO unit test for the property 'SeparationResults'
        }
        /// <summary>
        /// Test the property 'Xresolution'
        /// </summary>
        [Test]
        public void XresolutionTest()
        {
            // TODO unit test for the property 'Xresolution'
        }
        /// <summary>
        /// Test the property 'OriginalPageNumber'
        /// </summary>
        [Test]
        public void OriginalPageNumberTest()
        {
            // TODO unit test for the property 'OriginalPageNumber'
        }
        /// <summary>
        /// Test the property 'HasPageText'
        /// </summary>
        [Test]
        public void HasPageTextTest()
        {
            // TODO unit test for the property 'HasPageText'
        }
        /// <summary>
        /// Test the property 'SplitConfidence'
        /// </summary>
        [Test]
        public void SplitConfidenceTest()
        {
            // TODO unit test for the property 'SplitConfidence'
        }
        /// <summary>
        /// Test the property 'Yresolution'
        /// </summary>
        [Test]
        public void YresolutionTest()
        {
            // TODO unit test for the property 'Yresolution'
        }
        /// <summary>
        /// Test the property 'SeparationFeatureHighlightings'
        /// </summary>
        [Test]
        public void SeparationFeatureHighlightingsTest()
        {
            // TODO unit test for the property 'SeparationFeatureHighlightings'
        }
        /// <summary>
        /// Test the property 'SplitBeforePage'
        /// </summary>
        [Test]
        public void SplitBeforePageTest()
        {
            // TODO unit test for the property 'SplitBeforePage'
        }

    }

}
