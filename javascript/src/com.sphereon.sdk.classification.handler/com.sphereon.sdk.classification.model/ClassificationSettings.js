/**
 * Classification API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['com.sphereon.sdk.classification.handler/ApiClient', 'com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/Lifecycle', 'com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/StorageLocation'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Lifecycle'), require('./StorageLocation'));
  } else {
    // Browser globals (root is window)
    if (!root.classification) {
      root.classification = {};
    }
    root.classification.ClassificationSettings = factory(root.classification.ApiClient, root.classification.Lifecycle, root.classification.StorageLocation);
  }
}(this, function(ApiClient, Lifecycle, StorageLocation) {
  'use strict';




  /**
   * The ClassificationSettings model module.
   * @module com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings
   * @version 0.3.2
   */

  /**
   * Constructs a new <code>ClassificationSettings</code>.
   * Classification settings
   * @alias module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings
   * @class
   * @param classificationTypes {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.ClassificationTypesEnum>} List of classification types, currently only one allowed
   * @param maxResults {Integer} Maximum number of classification results per document or page per classification project
   * @param detailLevels {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.DetailLevelsEnum>} Level of detail for the results
   * @param resultStorageLocation {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/StorageLocation} Classification result location
   */
  var exports = function(classificationTypes, maxResults, detailLevels, resultStorageLocation) {
    var _this = this;


    _this['classificationTypes'] = classificationTypes;
    _this['maxResults'] = maxResults;
    _this['detailLevels'] = detailLevels;

    _this['resultStorageLocation'] = resultStorageLocation;



  };

  /**
   * Constructs a <code>ClassificationSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings} obj Optional instance to populate.
   * @return {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings} The populated <code>ClassificationSettings</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('lifecycle')) {
        obj['lifecycle'] = Lifecycle.constructFromObject(data['lifecycle']);
      }
      if (data.hasOwnProperty('classificationTypes')) {
        obj['classificationTypes'] = ApiClient.convertToType(data['classificationTypes'], ['String']);
      }
      if (data.hasOwnProperty('maxResults')) {
        obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Integer');
      }
      if (data.hasOwnProperty('detailLevels')) {
        obj['detailLevels'] = ApiClient.convertToType(data['detailLevels'], ['String']);
      }
      if (data.hasOwnProperty('inputStorageLocation')) {
        obj['inputStorageLocation'] = StorageLocation.constructFromObject(data['inputStorageLocation']);
      }
      if (data.hasOwnProperty('resultStorageLocation')) {
        obj['resultStorageLocation'] = StorageLocation.constructFromObject(data['resultStorageLocation']);
      }
      if (data.hasOwnProperty('resultTypes')) {
        obj['resultTypes'] = ApiClient.convertToType(data['resultTypes'], ['String']);
      }
      if (data.hasOwnProperty('classificationType')) {
        obj['classificationType'] = ApiClient.convertToType(data['classificationType'], ['String']);
      }
      if (data.hasOwnProperty('ocrMode')) {
        obj['ocrMode'] = ApiClient.convertToType(data['ocrMode'], 'String');
      }
    }
    return obj;
  }

  /**
   * Lifecycle
   * @member {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/Lifecycle} lifecycle
   */
  exports.prototype['lifecycle'] = undefined;
  /**
   * List of classification types, currently only one allowed
   * @member {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.ClassificationTypesEnum>} classificationTypes
   */
  exports.prototype['classificationTypes'] = undefined;
  /**
   * Maximum number of classification results per document or page per classification project
   * @member {Integer} maxResults
   */
  exports.prototype['maxResults'] = undefined;
  /**
   * Level of detail for the results
   * @member {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.DetailLevelsEnum>} detailLevels
   */
  exports.prototype['detailLevels'] = undefined;
  /**
   * Storage container location
   * @member {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/StorageLocation} inputStorageLocation
   */
  exports.prototype['inputStorageLocation'] = undefined;
  /**
   * Classification result location
   * @member {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/StorageLocation} resultStorageLocation
   */
  exports.prototype['resultStorageLocation'] = undefined;
  /**
   * Store classification result in
   * @member {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.ResultTypesEnum>} resultTypes
   */
  exports.prototype['resultTypes'] = undefined;
  /**
   * @member {Array.<module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.ClassificationTypeEnum>} classificationType
   */
  exports.prototype['classificationType'] = undefined;
  /**
   * OCR mode
   * @member {module:com.sphereon.sdk.classification.handler/com.sphereon.sdk.classification.model/ClassificationSettings.OcrModeEnum} ocrMode
   */
  exports.prototype['ocrMode'] = undefined;


  /**
   * Allowed values for the <code>classificationTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ClassificationTypesEnum = {
    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",
    /**
     * value: "PAGES"
     * @const
     */
    "PAGES": "PAGES",
    /**
     * value: "DOCUMENT_SEPARATION"
     * @const
     */
    "DOCUMENT_SEPARATION": "DOCUMENT_SEPARATION"  };

  /**
   * Allowed values for the <code>detailLevels</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DetailLevelsEnum = {
    /**
     * value: "SUMMARY"
     * @const
     */
    "SUMMARY": "SUMMARY",
    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",
    /**
     * value: "RAW"
     * @const
     */
    "RAW": "RAW"  };

  /**
   * Allowed values for the <code>resultTypes</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResultTypesEnum = {
    /**
     * value: "INLINE"
     * @const
     */
    "INLINE": "INLINE",
    /**
     * value: "STORAGE"
     * @const
     */
    "STORAGE": "STORAGE"  };

  /**
   * Allowed values for the <code>classificationType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ClassificationTypeEnum = {
    /**
     * value: "DOCUMENT"
     * @const
     */
    "DOCUMENT": "DOCUMENT",
    /**
     * value: "PAGES"
     * @const
     */
    "PAGES": "PAGES",
    /**
     * value: "DOCUMENT_SEPARATION"
     * @const
     */
    "DOCUMENT_SEPARATION": "DOCUMENT_SEPARATION"  };

  /**
   * Allowed values for the <code>ocrMode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OcrModeEnum = {
    /**
     * value: "ALWAYS"
     * @const
     */
    "ALWAYS": "ALWAYS",
    /**
     * value: "NEVER"
     * @const
     */
    "NEVER": "NEVER",
    /**
     * value: "AUTO"
     * @const
     */
    "AUTO": "AUTO"  };


  return exports;
}));


