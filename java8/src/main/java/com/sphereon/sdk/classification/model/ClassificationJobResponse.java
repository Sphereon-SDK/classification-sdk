/**
 * Classification API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.classification.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.sphereon.sdk.classification.model.JobInfo;
import com.sphereon.sdk.classification.model.StreamLocation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * The classification job. Has access to the job settings as well as ocr engine tasks
 */
@ApiModel(description = "The classification job. Has access to the job settings as well as ocr engine tasks")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-28T08:34:28.559+02:00")
public class ClassificationJobResponse   {
  @SerializedName("jobInfo")
  private JobInfo jobInfo = null;

  @SerializedName("inputStreamLocations")
  private List<StreamLocation> inputStreamLocations = new ArrayList<StreamLocation>();

  public ClassificationJobResponse jobInfo(JobInfo jobInfo) {
    this.jobInfo = jobInfo;
    return this;
  }

   /**
   * Job info
   * @return jobInfo
  **/
  @ApiModelProperty(example = "null", required = true, value = "Job info")
  public JobInfo getJobInfo() {
    return jobInfo;
  }

  public void setJobInfo(JobInfo jobInfo) {
    this.jobInfo = jobInfo;
  }

  public ClassificationJobResponse inputStreamLocations(List<StreamLocation> inputStreamLocations) {
    this.inputStreamLocations = inputStreamLocations;
    return this;
  }

  public ClassificationJobResponse addInputStreamLocationsItem(StreamLocation inputStreamLocationsItem) {
    this.inputStreamLocations.add(inputStreamLocationsItem);
    return this;
  }

   /**
   * The input files. Currently supported inputStreamLocations are: images, pdf- and text files
   * @return inputStreamLocations
  **/
  @ApiModelProperty(example = "null", required = true, value = "The input files. Currently supported inputStreamLocations are: images, pdf- and text files")
  public List<StreamLocation> getInputStreamLocations() {
    return inputStreamLocations;
  }

  public void setInputStreamLocations(List<StreamLocation> inputStreamLocations) {
    this.inputStreamLocations = inputStreamLocations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationJobResponse classificationJobResponse = (ClassificationJobResponse) o;
    return Objects.equals(this.jobInfo, classificationJobResponse.jobInfo) &&
        Objects.equals(this.inputStreamLocations, classificationJobResponse.inputStreamLocations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobInfo, inputStreamLocations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationJobResponse {\n");
    
    sb.append("    jobInfo: ").append(toIndentedString(jobInfo)).append("\n");
    sb.append("    inputStreamLocations: ").append(toIndentedString(inputStreamLocations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

