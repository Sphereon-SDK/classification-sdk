/**
 * Classification API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1
 * Contact: dev@sphereon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.sphereon.sdk.classification.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import com.sphereon.sdk.classification.model.Inline;
import com.sphereon.sdk.classification.model.Stream;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;


/**
 * The result from document classification
 */
@ApiModel(description = "The result from document classification")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-09-28T08:34:28.559+02:00")
public class ClassificationProjectResult   {
  @SerializedName("inline")
  private Inline inline = null;

  @SerializedName("stream")
  private Stream stream = null;

  /**
   * Classification type
   */
  public enum ClassificationTypeEnum {
    @SerializedName("DOCUMENT")
    DOCUMENT("DOCUMENT"),
    
    @SerializedName("PAGES")
    PAGES("PAGES"),
    
    @SerializedName("DOCUMENT_SEPARATION")
    DOCUMENT_SEPARATION("DOCUMENT_SEPARATION");

    private String value;

    ClassificationTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("classificationType")
  private ClassificationTypeEnum classificationType = null;

  @SerializedName("projectId")
  private String projectId = null;

  /**
   * Gets or Sets resultType
   */
  public enum ResultTypeEnum {
    @SerializedName("INLINE")
    INLINE("INLINE"),
    
    @SerializedName("STORAGE")
    STORAGE("STORAGE");

    private String value;

    ResultTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("resultType")
  private List<ResultTypeEnum> resultType = new ArrayList<ResultTypeEnum>();

  public ClassificationProjectResult inline(Inline inline) {
    this.inline = inline;
    return this;
  }

   /**
   * Storage of classification result in response
   * @return inline
  **/
  @ApiModelProperty(example = "null", value = "Storage of classification result in response")
  public Inline getInline() {
    return inline;
  }

  public void setInline(Inline inline) {
    this.inline = inline;
  }

  public ClassificationProjectResult stream(Stream stream) {
    this.stream = stream;
    return this;
  }

   /**
   * External storage of classification result
   * @return stream
  **/
  @ApiModelProperty(example = "null", value = "External storage of classification result")
  public Stream getStream() {
    return stream;
  }

  public void setStream(Stream stream) {
    this.stream = stream;
  }

  public ClassificationProjectResult classificationType(ClassificationTypeEnum classificationType) {
    this.classificationType = classificationType;
    return this;
  }

   /**
   * Classification type
   * @return classificationType
  **/
  @ApiModelProperty(example = "null", value = "Classification type")
  public ClassificationTypeEnum getClassificationType() {
    return classificationType;
  }

  public void setClassificationType(ClassificationTypeEnum classificationType) {
    this.classificationType = classificationType;
  }

  public ClassificationProjectResult projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Project id
   * @return projectId
  **/
  @ApiModelProperty(example = "null", value = "Project id")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ClassificationProjectResult resultType(List<ResultTypeEnum> resultType) {
    this.resultType = resultType;
    return this;
  }

  public ClassificationProjectResult addResultTypeItem(ResultTypeEnum resultTypeItem) {
    this.resultType.add(resultTypeItem);
    return this;
  }

   /**
   * Returned result in response and/or store
   * @return resultType
  **/
  @ApiModelProperty(example = "null", value = "Returned result in response and/or store")
  public List<ResultTypeEnum> getResultType() {
    return resultType;
  }

  public void setResultType(List<ResultTypeEnum> resultType) {
    this.resultType = resultType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClassificationProjectResult classificationProjectResult = (ClassificationProjectResult) o;
    return Objects.equals(this.inline, classificationProjectResult.inline) &&
        Objects.equals(this.stream, classificationProjectResult.stream) &&
        Objects.equals(this.classificationType, classificationProjectResult.classificationType) &&
        Objects.equals(this.projectId, classificationProjectResult.projectId) &&
        Objects.equals(this.resultType, classificationProjectResult.resultType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inline, stream, classificationType, projectId, resultType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClassificationProjectResult {\n");
    
    sb.append("    inline: ").append(toIndentedString(inline)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    classificationType: ").append(toIndentedString(classificationType)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    resultType: ").append(toIndentedString(resultType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

