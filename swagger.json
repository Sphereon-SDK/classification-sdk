{
  "basePath": "/classification/0.1",
  "paths": {
    "/projects": {
      "post": {
        "summary": "Create project",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Create a new project using the given project settings.",
        "operationId": "createProject",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ProjectResponse"},
          "description": "OK"
        }},
        "parameters": [{
          "schema": {"$ref": "#/definitions/ProjectSettings"},
          "in": "body",
          "name": "projectsettings",
          "description": "The project settings",
          "required": true
        }],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json;charset=UTF-8"]
      },
      "get": {
        "summary": "Get all projects",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get all project definitions and their current state.",
        "operationId": "getProjects",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ProjectResponse"},
          "description": "All projects that have not been deleted"
        }},
        "parameters": [{
          "in": "query",
          "name": "status",
          "description": "A list of status to filter on.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREATED",
              "PROJECT_UPLOADED",
              "ERROR",
              "DELETED"
            ]
          },
          "collectionFormat": "multi",
          "required": false,
          "enum": [
            "CREATED",
            "PROJECT_UPLOADED",
            "ERROR",
            "DELETED"
          ]
        }],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json"]
      }
    },
    "/projects/{projectId}": {
      "get": {
        "summary": "Get project",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the info of an existing project.",
        "operationId": "getProject",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ProjectResponse"},
          "description": "OK"
        }},
        "parameters": [{
          "in": "path",
          "name": "projectId",
          "description": "projectId",
          "type": "string",
          "required": true
        }],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete project",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the project including all related data.",
        "operationId": "deleteProject",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ProjectResponse"},
          "description": "OK"
        }},
        "parameters": [{
          "in": "path",
          "name": "projectId",
          "description": "projectId",
          "type": "string",
          "required": true
        }],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json"]
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "summary": "Job definition and state",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get the classification job definition and current state. Please not that you can differentiate based on http response status",
        "operationId": "getJobWithClaimParameters",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
            "description": "Classification job returned and Job is done or in error"
          },
          "202": {
            "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
            "description": "Classification job returned and Job is still processing"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobId",
          "description": "jobId",
          "type": "string",
          "required": true
        }],
        "tags": [
          "All",
          "Job"
        ],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete a job manually",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete the Classification job and all related files",
        "operationId": "deleteJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
            "description": "Classification job returned and Job is done or in error"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Could not delete all parts"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobId",
          "description": "jobId",
          "type": "string",
          "required": true
        }],
        "tags": [
          "All",
          "Job"
        ],
        "consumes": ["application/json"]
      },
      "put": {
        "summary": "Submit classification job for processing",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Start classification of the previously uploaded file(s), using the supplied settings associated with the job in the request body. You can only submit the job after a new Job is created with status INPUTS_UPLOADED or resubmit an existing Job with status ERROR. In all cases the job Id in the path must match the jobId in the request",
        "operationId": "submitJob",
        "responses": {
          "200": {
            "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
            "description": "Classification job submitted"
          },
          "400": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Resubmitted job not allowed because the job is currently processing or already processed and had status DONE"
          },
          "404": {
            "schema": {"$ref": "#/definitions/ErrorResponse"},
            "description": "Invalid job id"
          }
        },
        "parameters": [{
          "in": "path",
          "name": "jobId",
          "description": "jobId",
          "type": "string",
          "required": true
        }],
        "tags": [
          "All",
          "Job"
        ],
        "consumes": ["application/json"]
      }
    },
    "/projects/{projectId}/streams/{projectStreamLocationId}": {
      "get": {
        "summary": "Get project stream by locationid",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/octet-stream"],
        "description": "Download the project data",
        "operationId": "getProjectStreamByLocationId",
        "responses": {"200": {
          "schema": {
            "format": "byte",
            "type": "string"
          },
          "description": "Project stream retrieval successful"
        }},
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "projectId",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "projectStreamLocationId",
            "description": "projectStreamLocationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json"]
      },
      "delete": {
        "summary": "Delete project stream",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Delete a stream in the project.",
        "operationId": "deleteProjectStream",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ProjectResponse"},
          "description": "OK"
        }},
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "projectId",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "projectStreamLocationId",
            "description": "projectStreamLocationId",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["application/json"]
      },
      "put": {
        "summary": "Updated project stream",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Update the project data used by the classification engine.",
        "operationId": "updateProjectStream",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/StreamResponse"},
          "description": "OK"
        }},
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "description": "projectId",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "projectStreamLocationId",
            "description": "projectStreamLocationId",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "stream",
            "description": "The project data",
            "type": "file",
            "required": true
          }
        ],
        "tags": [
          "All",
          "Project"
        ],
        "consumes": ["multipart/form-data"]
      }
    },
    "/jobs/{jobId}/projects/{projectId}": {"post": {
      "summary": "Add a projectId",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Add a project Id. Classification will not be started yet.",
      "operationId": "addProjectId",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
          "description": "Project id added. The JSON Job response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Job could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobId",
          "description": "jobId",
          "type": "string",
          "required": true
        },
        {
          "in": "path",
          "name": "projectId",
          "description": "projectId",
          "type": "string",
          "required": true
        }
      ],
      "tags": [
        "All",
        "Job"
      ],
      "consumes": ["application/json"]
    }},
    "/jobs/{jobId}/result": {"get": {
      "summary": "Classification result",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Get the classification job definition and current state. Please not that you can differentiate based on http response status",
      "operationId": "getClassificationResult",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/ClassificationResponse"},
          "description": "Classification result returned and Job is done or in error"
        },
        "202": {
          "schema": {"$ref": "#/definitions/ClassificationResponse"},
          "description": "Classification result not returned and Job is still processing"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id"
        }
      },
      "parameters": [{
        "in": "path",
        "name": "jobId",
        "description": "jobId",
        "type": "string",
        "required": true
      }],
      "tags": [
        "All",
        "Job"
      ],
      "consumes": ["application/json"]
    }},
    "/projects/{projectId}/streams": {"post": {
      "summary": "Upload project stream",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload the project data used by the classification engine.",
      "operationId": "uploadProjectStream",
      "responses": {"200": {
        "schema": {"$ref": "#/definitions/StreamResponse"},
        "description": "OK"
      }},
      "parameters": [
        {
          "in": "path",
          "name": "projectId",
          "description": "projectId",
          "type": "string",
          "required": true
        },
        {
          "in": "formData",
          "name": "stream",
          "description": "The project data",
          "type": "file",
          "required": true
        }
      ],
      "tags": [
        "All",
        "Project"
      ],
      "consumes": ["multipart/form-data"]
    }},
    "/jobs": {
      "post": {
        "summary": "Create classification job",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Create a job using the given classification settings.",
        "operationId": "createClassificationJob",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
          "description": "Classification job created but not started yet"
        }},
        "parameters": [{
          "schema": {"$ref": "#/definitions/ClassificationSettings"},
          "in": "body",
          "name": "classificationSettings",
          "description": "classificationSettings",
          "required": true
        }],
        "tags": [
          "All",
          "Job"
        ],
        "consumes": ["application/json;charset=UTF-8"]
      },
      "get": {
        "summary": "Get all jobs",
        "security": [{"oauth2schema": ["global"]}],
        "produces": ["application/json;charset=UTF-8"],
        "description": "Get all classification job definitions and their current state.",
        "operationId": "getJobs",
        "responses": {"200": {
          "schema": {"$ref": "#/definitions/ClassificationJobResponse"},
          "description": "All classification jobs that have not been deleted"
        }},
        "parameters": [{
          "in": "query",
          "name": "status",
          "description": "A list of status to filter on.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CREATED",
              "INPUTS_UPLOADED",
              "PROCESSING",
              "DONE",
              "ERROR",
              "DELETED"
            ]
          },
          "collectionFormat": "multi",
          "required": false,
          "enum": [
            "CREATED",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        }],
        "tags": [
          "All",
          "Job"
        ],
        "consumes": ["application/json"]
      }
    },
    "/jobs/{jobId}/streams": {"post": {
      "summary": "Upload a file",
      "security": [{"oauth2schema": ["global"]}],
      "produces": ["application/json;charset=UTF-8"],
      "description": "Upload an input image. Classification will not be started yet.",
      "operationId": "uploadInputFile",
      "responses": {
        "200": {
          "schema": {"$ref": "#/definitions/StreamResponse"},
          "description": "File uploaded. The JSON stream location response will be returned in the body."
        },
        "400": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "File could not be stored/processed"
        },
        "404": {
          "schema": {"$ref": "#/definitions/ErrorResponse"},
          "description": "Invalid job id."
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "jobId",
          "description": "jobId",
          "type": "string",
          "required": true
        },
        {
          "in": "formData",
          "name": "stream",
          "description": "The additional binary image (file/inputstream) to be classified",
          "type": "file",
          "required": true
        }
      ],
      "tags": [
        "All",
        "Job"
      ],
      "consumes": ["multipart/form-data"]
    }}
  },
  "host": "gw.api.cloud.sphereon.com",
  "schemes": ["https"],
  "securityDefinitions": {"oauth2schema": {
    "tokenUrl": "https://gw.api.cloud.sphereon.com/token",
    "scopes": {"global": "accessEverything"},
    "type": "oauth2",
    "flow": "application"
  }},
  "definitions": {
    "ClassificationInputInfo": {
      "description": "Input documents which where classified",
      "type": "object",
      "required": ["inputStreamLocations"],
      "properties": {"inputStreamLocations": {
        "description": "Original documents",
        "type": "array",
        "items": {"$ref": "#/definitions/StreamLocation"}
      }}
    },
    "ClassificationSettings": {
      "description": "Classification settings",
      "type": "object",
      "required": [
        "classificationTypes",
        "detailLevels",
        "maxResults",
        "resultStorageLocation"
      ],
      "properties": {
        "lifecycle": {
          "description": "Lifecycle",
          "$ref": "#/definitions/Lifecycle"
        },
        "classificationTypes": {
          "description": "List of classification types, currently only one allowed",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "DOCUMENT",
              "PAGES",
              "DOCUMENT_SEPARATION"
            ]
          }
        },
        "maxResults": {
          "format": "int32",
          "description": "Maximum number of classification results per document or page per classification project",
          "type": "integer"
        },
        "detailLevels": {
          "description": "Level of detail for the results",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SUMMARY",
              "DEFAULT",
              "RAW"
            ]
          }
        },
        "inputStorageLocation": {
          "description": "Storage container location",
          "$ref": "#/definitions/StorageLocation"
        },
        "resultStorageLocation": {
          "description": "Classification result location",
          "$ref": "#/definitions/StorageLocation"
        },
        "resultTypes": {
          "description": "Store classification result in",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INLINE",
              "STORAGE"
            ]
          }
        },
        "ocrMode": {
          "description": "OCR mode",
          "type": "string",
          "enum": [
            "ALWAYS",
            "NEVER",
            "AUTO"
          ]
        }
      }
    },
    "ClassificationJob": {
      "description": "The classification job. Has access to the job settings.",
      "type": "object",
      "required": ["jobId"],
      "properties": {
        "jobId": {
          "description": "The server generated job jobId. This jobId is checked against the jobId in the request path on overy invocation",
          "type": "string"
        },
        "settings": {"$ref": "#/definitions/ClassificationSettings"},
        "targetProjectIds": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "ClassificationJobResponse": {
      "description": "The classification job. Has access to the job settings as well as ocr engine tasks",
      "type": "object",
      "required": [
        "inputInfo",
        "jobInfo"
      ],
      "properties": {
        "inputInfo": {
          "description": "Original input information",
          "$ref": "#/definitions/ClassificationInputInfo"
        },
        "jobInfo": {
          "description": "Job info",
          "$ref": "#/definitions/JobInfo"
        }
      }
    },
    "ProjectClassificationClassifierFeature": {
      "description": "Classifier feature",
      "type": "object",
      "properties": {
        "score": {
          "format": "double",
          "description": "Score",
          "type": "number"
        },
        "className": {"type": "string"}
      }
    },
    "StreamLocation": {
      "description": "Location record of data stream",
      "type": "object",
      "properties": {
        "folderPath": {"type": "string"},
        "originalFileName": {"type": "string"},
        "fileName": {"type": "string"},
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "containerId": {"type": "string"}
      }
    },
    "ClassificationProjectResult": {
      "description": "The result from document classification",
      "type": "object",
      "required": ["projectInfo"],
      "properties": {
        "projectInfo": {
          "description": "Project info",
          "$ref": "#/definitions/ClassificationProjectInfo"
        },
        "inline": {
          "description": "Storage of classification result in response",
          "$ref": "#/definitions/Inline"
        },
        "stream": {
          "description": "External storage of classification result",
          "$ref": "#/definitions/Stream"
        },
        "classificationType": {
          "description": "Classification type",
          "type": "string",
          "enum": [
            "DOCUMENT",
            "PAGES",
            "DOCUMENT_SEPARATION"
          ]
        },
        "resultType": {
          "description": "Returned result in response and/or store",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "INLINE",
              "STORAGE"
            ]
          }
        }
      }
    },
    "ProjectClassificationDocument": {
      "description": "The classification Document",
      "type": "object",
      "required": [
        "firstPage",
        "lastPage",
        "results"
      ],
      "properties": {
        "firstPage": {
          "format": "int32",
          "description": "First page",
          "type": "integer"
        },
        "lastPage": {
          "format": "int32",
          "description": "Last page",
          "type": "integer"
        },
        "results": {
          "description": "A list of classification results",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationResult"}
        }
      }
    },
    "ProjectClassificationResult": {
      "description": "The classification result",
      "type": "object",
      "properties": {
        "score": {
          "format": "double",
          "description": "Score",
          "type": "number"
        },
        "notes": {
          "description": "A list of classification notes",
          "type": "array",
          "items": {"type": "string"}
        },
        "className": {
          "description": "Class name",
          "type": "string"
        }
      }
    },
    "ProjectSettings": {
      "description": "Project settings",
      "type": "object",
      "required": [
        "description",
        "engine",
        "projectName",
        "projectStorageLocation",
        "projectStreamLocations"
      ],
      "properties": {
        "projectStreamLocations": {
          "description": "Project stream locations",
          "type": "array",
          "items": {"$ref": "#/definitions/StreamLocation"}
        },
        "engine": {
          "description": "Engine",
          "type": "string",
          "enum": ["PREMIUM"]
        },
        "description": {
          "description": "Project description",
          "type": "string"
        },
        "projectName": {
          "description": "Project name",
          "type": "string"
        },
        "projectStorageLocation": {
          "description": "Project Files storage location",
          "$ref": "#/definitions/StorageLocation"
        },
        "projectId": {"type": "string"}
      }
    },
    "ClassificationResultItem": {
      "description": "Document to be classified",
      "type": "object",
      "required": ["inputInfo"],
      "properties": {
        "inputInfo": {
          "description": "Original input information",
          "$ref": "#/definitions/ClassificationInputInfo"
        },
        "results": {
          "description": "Classification results for a document per project",
          "type": "array",
          "items": {"$ref": "#/definitions/ClassificationProjectResult"}
        }
      }
    },
    "JobInfo": {
      "type": "object",
      "required": ["status"],
      "properties": {
        "completionTime": {
          "format": "date-time",
          "description": "The completion date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "jobId": {"type": "string"},
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "job": {
          "description": "The job",
          "$ref": "#/definitions/ClassificationJob"
        },
        "statusMessage": {
          "description": "A status message, which can be informational, warning or error. A message here does not indicate an error perse",
          "readOnly": true,
          "type": "string"
        },
        "queueTime": {
          "format": "date-time",
          "description": "The conversion queue date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the job",
          "readOnly": true,
          "type": "string",
          "enum": [
            "CREATED",
            "INPUTS_UPLOADED",
            "PROCESSING",
            "DONE",
            "ERROR",
            "DELETED"
          ]
        }
      }
    },
    "ClassificationSummary": {
      "description": "The classification job. Has access to the job settings as well as ocr engine tasks",
      "type": "object",
      "required": ["items"],
      "properties": {"items": {
        "description": "Classification job summary items",
        "type": "array",
        "items": {"$ref": "#/definitions/SummaryItem"}
      }}
    },
    "ClassificationProjectInfo": {
      "description": "Project info",
      "type": "object",
      "required": ["projectStreamLocations"],
      "properties": {
        "projectStreamLocations": {
          "description": "Original documents",
          "type": "array",
          "items": {"$ref": "#/definitions/StreamLocation"}
        },
        "projectId": {
          "description": "Project id",
          "type": "string"
        }
      }
    },
    "ClassificationResponse": {
      "description": "The Classification response",
      "type": "object",
      "required": [
        "detailLevels",
        "jobInfo"
      ],
      "properties": {
        "classificationResult": {
          "description": "Classification results",
          "$ref": "#/definitions/ClassificationResult"
        },
        "summary": {
          "description": "Classification job summary",
          "$ref": "#/definitions/ClassificationSummary"
        },
        "detailLevels": {
          "description": "Level of detail for the results",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SUMMARY",
              "DEFAULT",
              "RAW"
            ]
          }
        },
        "jobInfo": {
          "description": "Job info",
          "$ref": "#/definitions/JobInfo"
        }
      }
    },
    "Stream": {
      "description": "External storage of classification result",
      "type": "object",
      "properties": {"streamLocation": {
        "description": "The location of the classification result.",
        "$ref": "#/definitions/StreamLocation"
      }}
    },
    "StorageLocation": {
      "description": "Storage Location",
      "type": "object",
      "properties": {
        "folderPath": {"type": "string"},
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "containerId": {"type": "string"}
      }
    },
    "ProjectClassificationTextLine": {
      "description": "Text line",
      "type": "object",
      "properties": {
        "top": {
          "format": "int32",
          "description": "The top pixel coordinate of the text line",
          "type": "integer"
        },
        "left": {
          "format": "int32",
          "description": "The left pixel coordinate of the text line",
          "type": "integer"
        },
        "bottom": {
          "format": "int32",
          "description": "The bottom pixel coordinate of the text line",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "description": "The width of the text line in pixel coordinate",
          "type": "integer"
        },
        "words": {
          "description": "All words of this text line",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationWord"}
        },
        "right": {
          "format": "int32",
          "description": "The right pixel coordinate of the text line",
          "type": "integer"
        },
        "text": {
          "description": "The text of this line from the words",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "description": "The height of the text line in pixel coordinate",
          "type": "integer"
        }
      }
    },
    "Lifecycle": {
      "description": "Lifecycle settings. When no lifecycle settings are supplied, the job and files will be deleted directly after retrieval of the file",
      "type": "object",
      "properties": {
        "actionTime": {
          "format": "date-time",
          "description": "The time at which the job and files will be deleted, regardless of whether it has been retrieved or not. Maximal time is 1 day from job creation",
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": ["DELETE"]
        },
        "type": {
          "type": "string",
          "enum": [
            "RETRIEVAL",
            "TIME"
          ]
        }
      }
    },
    "StreamResponse": {
      "description": "The result location of a stream",
      "type": "object",
      "required": ["streamLocation"],
      "properties": {"streamLocation": {
        "description": "The actual location of the stream",
        "$ref": "#/definitions/StreamLocation"
      }}
    },
    "Error": {
      "description": "An error",
      "type": "object",
      "required": [
        "code",
        "level",
        "message"
      ],
      "properties": {
        "code": {"type": "string"},
        "level": {
          "type": "string",
          "enum": [
            "INFO",
            "WARNING",
            "FATAL"
          ]
        },
        "cause": {"$ref": "#/definitions/Error"},
        "message": {"type": "string"}
      }
    },
    "ClassificationResult": {
      "description": "The classification result",
      "type": "object",
      "properties": {"items": {
        "description": "A list of the classification results.",
        "type": "array",
        "items": {"$ref": "#/definitions/ClassificationResultItem"}
      }}
    },
    "Inline": {
      "description": "External storage of classification result",
      "type": "object",
      "properties": {
        "pages": {
          "description": "A list of pages",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationPage"}
        },
        "documents": {
          "description": "A list of documents.",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationDocument"}
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response",
      "type": "object",
      "properties": {"errors": {
        "type": "array",
        "items": {"$ref": "#/definitions/Error"}
      }}
    },
    "ProjectResponse": {
      "description": "The project response",
      "type": "object",
      "required": ["status"],
      "properties": {
        "creationTime": {
          "format": "date-time",
          "description": "The creation date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update date/time of this job in ISO 8601 format",
          "readOnly": true,
          "type": "string"
        },
        "projectId": {"type": "string"},
        "projectSettings": {
          "description": "The project info",
          "$ref": "#/definitions/ProjectSettings"
        },
        "statusMessage": {
          "description": "A status message, which can be informational, warning or error. A message here does not indicate an error perse",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "description": "The status of the project action",
          "readOnly": true,
          "type": "string",
          "enum": [
            "CREATED",
            "PROJECT_UPLOADED",
            "ERROR",
            "DELETED"
          ]
        }
      }
    },
    "SummaryItem": {
      "description": "The classification job summary item",
      "type": "object",
      "required": [
        "className",
        "classificationContext",
        "firstPage",
        "inputInfo",
        "lastPage",
        "score"
      ],
      "properties": {
        "inputInfo": {
          "description": "Original input information",
          "$ref": "#/definitions/ClassificationInputInfo"
        },
        "score": {
          "format": "double",
          "description": "Confidence score",
          "type": "number"
        },
        "firstPage": {
          "format": "int32",
          "description": "First page",
          "type": "integer"
        },
        "lastPage": {
          "format": "int32",
          "description": "Last page",
          "type": "integer"
        },
        "className": {
          "description": "classification name",
          "type": "string"
        },
        "classificationContext": {
          "description": "classification context",
          "type": "string",
          "enum": [
            "DOCUMENT",
            "PAGE"
          ]
        },
        "projectId": {
          "description": "Project id",
          "type": "string"
        }
      }
    },
    "ProjectClassificationWord": {
      "description": "Word of text line",
      "type": "object",
      "properties": {
        "top": {
          "format": "int32",
          "description": "The top pixel coordinate of the text line",
          "type": "integer"
        },
        "left": {
          "format": "int32",
          "description": "The left pixel coordinate of the text line",
          "type": "integer"
        },
        "bottom": {
          "format": "int32",
          "description": "The bottom pixel coordinate of the text line",
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "description": "The width of the text line in pixel coordinate",
          "type": "integer"
        },
        "right": {
          "format": "int32",
          "description": "The right pixel coordinate of the text line",
          "type": "integer"
        },
        "text": {
          "description": "The text of the word",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "description": "The height of the text line in pixel coordinate",
          "type": "integer"
        }
      }
    },
    "ProjectClassificationPage": {
      "description": "The classification result page",
      "type": "object",
      "properties": {
        "classifiedClassName": {
          "description": "classifiedClassName",
          "type": "string"
        },
        "featureHighlightings": {
          "description": "featureHighlightings",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationClassifierFeature"}
        },
        "pageNumber": {
          "format": "int32",
          "description": "Page number",
          "type": "integer"
        },
        "textLines": {
          "description": "textLines",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationTextLine"}
        },
        "skipContentClassification": {
          "description": "skipContentClassification",
          "type": "boolean",
          "example": false
        },
        "classificationResults": {
          "description": "A list of classification results",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationResult"}
        },
        "rotationType": {
          "description": "rotationType",
          "type": "string"
        },
        "confidentDocumentClassificationResult": {
          "description": "confidentDocumentClassificationResult",
          "type": "boolean",
          "example": false
        },
        "assignedClassName": {
          "description": "assignedClassName",
          "type": "string"
        },
        "separationResults": {
          "description": "separationResults",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationResult"}
        },
        "xresolution": {
          "format": "double",
          "type": "number"
        },
        "originalPageNumber": {
          "format": "int32",
          "description": "originalPageNumber",
          "type": "integer"
        },
        "hasPageText": {
          "description": "hasPageText",
          "type": "boolean",
          "example": false
        },
        "splitConfidence": {
          "format": "double",
          "description": "splitConfidence",
          "type": "number"
        },
        "yresolution": {
          "format": "double",
          "type": "number"
        },
        "separationFeatureHighlightings": {
          "description": "separationFeatureHighlightings",
          "type": "array",
          "items": {"$ref": "#/definitions/ProjectClassificationClassifierFeature"}
        },
        "splitBeforePage": {
          "description": "splitBeforePage",
          "type": "boolean",
          "example": false
        }
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "contact": {
      "name": "Sphereon DevOps Team",
      "url": "https://sphereon.com",
      "email": "dev@sphereon.com"
    },
    "termsOfService": "https://sphereon.com",
    "title": "Classification API",
    "version": "0.1"
  },
  "tags": [
    {
      "name": "All",
      "description": "Classification all API's"
    },
    {
      "name": "Job",
      "description": "Classification jobs API"
    },
    {
      "name": "Project",
      "description": "Classification projects API"
    }
  ]
}